# DarkGengar (C) 2018
# Date 05/07/18
# License GPL see License.txt for more details

import argparse
import time

#save start time to variable
start_time = time.time()

ROM_BASE = 0x08000000

def word_view(data):
    return [data[i*4:i*4+4] for i in range(len(data)//4)]

parser = argparse.ArgumentParser(description="Find Pointer in GBA ROM")
parser.add_argument("in_gba_rom", type=str, help="GBA ROM")
parser.add_argument("in_offset", type=lambda x: int(x, 0), help="Offset to search for in ROM")
parser.add_argument("in_symbol", type=str, help="Symbol to write at the pointer offsets")
parser.add_argument("out_file", type=str, help="File to export the pointer offsets")
args = parser.parse_args()

with open(args.in_gba_rom, 'rb') as infile:
    data = infile.read()

byte_string = (args.in_offset + ROM_BASE).to_bytes(4, "little")
pointer_offs = [hex(i*4 + ROM_BASE) for i,x in enumerate(word_view(data)) if x==byte_string]

with open(args.out_file, 'w') as outfile:
    outfile.write("// DarkGengar\n")
    outfile.write("// License GPL see License.txt for more details\n")
    outfile.write("// Generated by Pointer Finder\n\n")
    outfile.write("// Pokemon name table")
    for i in range(len(pointer_offs)):
        outfile.write("\n.org " + pointer_offs[i] + '\n')
        outfile.write("\t.word " + args.in_symbol + "\n")

#print compile time
print('\n------ %s seconds ------' % (time.time() - start_time) )